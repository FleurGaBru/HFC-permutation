configfile: "config.yaml"
PREFIX = config["prefix"]
#change that name of initial ped/map name is given by the params. Maybe generate it automatically (look for ped/map file pair in data)
# add the second extension (ped) to the input with expand {ext} ext=[]
rule generate_bed:
    input:
        ped= expand("data/{prefix}.ped", prefix=PREFIX),
        map= expand("data/{prefix}.map", prefix=PREFIX)
        # expand("data/{sample}.{ext}", sample=config["samples"], ext=FORMAT)
        # lambda wildcards: config["samples"][wildcards.sample]
    output:
        expand("permutation/{prefix}.{ext}", prefix=PREFIX, ext=["bed", "bim", "fam"])
    shell:
        "plink2 --allow-extra-chr --chr-set 33 --ped {input.ped} --map {input.map} --make-bed --out permutation/{PREFIX}"

rule create_thinned_plink:
    input:
        bed= expand("permutation/{prefix}.bed", prefix = PREFIX),
        bim= expand("permutation/{prefix}.bim", prefix = PREFIX),
        fam= expand("permutation/{prefix}.fam", prefix = PREFIX)
    output:
        dynamic("permutation/{prefix}.{chunk}.{ext}")
    params:
        SNP = config["snp"],
        RANGE = config["range"]
    run:
        for i in range(1, params.RANGE):
          shell("plink2 --allow-extra-chr --chr-set 33 --bed {input.bed} --bim {input.bim} --fam {input.fam} --thin-count {params.SNP} --make-bed --out ./permutation/{PREFIX}.{params.SNP}.{i}")
          shell("plink2 --allow-extra-chr --chr-set 33 --bfile ./permutation/{PREFIX}.{params.SNP}.{i} --recode --out ./permutation/{PREFIX}.{params.SNP}.{i}")
